-- chat functionality

CREATE TABLE chats (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid references auth.users,
  name TEXT NOT NULL,
  is_attached BOOLEAN DEFAULT FALSE,
  rest_area_id bigint references public.rest_areas,
  inserted_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
);

alter table public.chats enable row level security;

create policy "Public bookmarks are viewable by everyone."
  on bookmarks for select
  using ( true );

create policy "Users can insert their own bookmarks."
  on bookmarks for insert
  with check ( auth.uid() = user_id );

create policy "Users can update own bookmarks."
  on bookmarks for update
  using ( auth.uid() = user_id );

create policy "Users can delete own bookmarks."
  on bookmarks for delete
  using ( auth.uid() = user_id );

CREATE TABLE messages (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid references auth.users not null,
  chat references public.chats not null,
  text TEXT NOT NULL,
  is_flagged BOOLEAN DEFAULT FALSE,
  is_hidden BOOLEAN DEFAULT FALSE,
  inserted_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null,
);

alter table public.messages enable row level security;

create policy "Public messages are viewable by everyone."
  on messages for select
  using ( true );

create policy "Users can insert their own messages."
  on messages for insert
  with check ( auth.uid() = user_id );

create policy "Users can update own messages."
  on messages for update
  using ( auth.uid() = user_id );

create policy "Users can delete own messages."
  on messages for delete
  using ( auth.uid() = user_id );